#+TITLE: Custom Config
#+STARTUP: headlines
#+STARTUP: nohideblocks
#+STARTUP: noindent
#+OPTIONS: toc:4 h:4
#+PROPERTY: header-args:emacs-lisp :comments link

* Config
** User
   #+BEGIN_SRC emacs-lisp
(setq user-full-name "James Liu"
      user-mail-address "james@jamesliu.io")
   #+END_SRC
** UI
*** Editing
    #+BEGIN_SRC emacs-lisp
(setq doom-font (font-spec :family "Iosevka" :size 14))
(setq doom-theme 'spacemacs-light)
(setq display-line-numbers-type t)

(setq doom-themes-treemacs-theme "doom-colors") ; use the colorful treemacs theme
(doom-themes-treemacs-config)

(doom-themes-org-config)

(setq +pretty-code-enabled-modes nil)
    #+END_SRC
*** Window
    - Start Emacs in fullscreen.
   #+BEGIN_SRC emacs-lisp
"Start full screen"
(add-to-list 'default-frame-alist '(fullscreen . maximized))
(add-to-list 'default-frame-alist '(ns-transparent-titlebar . t))
   #+END_SRC
** Projectile 
  #+BEGIN_SRC emacs-lisp
  (setq projectile-project-search-path '("~/projects/"))
  #+END_SRC
** Source Control
*** Magit
   #+BEGIN_SRC emacs-lisp
(with-eval-after-load 'magit
  (require 'forge)
  (require 'github-review)

  (setq github-review-fetch-top-level-and-review-comments t))
   #+END_SRC

** Languages 
*** Go
   #+BEGIN_SRC emacs-lisp
   (setq go-format-before-save t)
   (setq gofmt-command "goimports")
   #+END_SRC
*** Rust
    #+BEGIN_SRC emacs-lisp
(setq lsp-rust-server 'rust-analyzer)
(setq rustic-lsp-server 'rust-analyzer)
    #+END_SRC
** org-mode
*** Directories
   #+BEGIN_SRC emacs-lisp
   (setq org-directory "~/Dropbox/org/")
   (setq org-agenda-files (directory-files-recursively "~/Dropbox/org/" "\.org$"))

   (setq org-default-notes-file "~/Dropbox/org/inbox/2020-may.org")
   #+END_SRC
*** Source Blocks
#+BEGIN_SRC emacs-lisp
(require 'org-tempo)

(setq org-src-tab-acts-natively t)

(setq org-src-fontify-natively t
      org-src-tab-acts-natively t
      org-confirm-babel-evaluate nil
      org-edit-src-content-indentation 0)
(require 'ob-go)
(org-babel-do-load-languages
 'org-babel-load-languages
 '((ruby . t)
   (python . t)
   (rust . t)
   (js . t)
   (shell . t)
   (go .t)
   (C .t)))
#+END_SRC
*** =org-journal=
   #+BEGIN_SRC emacs-lisp
   (setq org-journal-dir "~/Dropbox/org/journal/")
   (defun org-journal-find-location ()
         (org-journal-new-entry t)
         (goto-char (point-min)))
   #+END_SRC
*** =org-capture=
   #+BEGIN_SRC emacs-lisp
   (setq org-capture-templates
     '(
        ("t" "Quick task" entry
        (file "") 
        "* TODO %^{Task}\n"
        :immediate-finish t)
       ("T" "Task" entry
        (file "")
        "* TODO %^{Task}\n")
       ("n" "Quick note" entry
        (file "")
        "* :NOTE: %^{Note}\n"
        :immediate-finish t)
       ("N" "Note" entry
        (file "")
        "* :NOTE: %^{Note}\n")
       ("J" "Journal" entry
        (function org-journal-find-location)
        "* %(format-time-string org-journal-time-format)%^{Title}\n%i%?")))
   #+END_SRC
*** =org-download=
   #+BEGIN_SRC emacs-lisp
   (require 'org-download)
   (add-hook 'dired-mode-hook 'org-download-enable)
   #+END_SRC
*** Inline images
   #+BEGIN_SRC emacs-lisp
   (setq org-startup-with-inline-images t)
   #+END_SRC

*** =org-projectile=
   #+BEGIN_SRC emacs-lisp
   (require 'org-projectile)
   (setq org-projectile-projects-file
         "~/Dropbox/org/projects/inbox.org")
   (push (org-projectile-project-todo-entry) org-capture-templates)
   (setq org-agenda-files (append org-agenda-files (org-projectile-todo-files)))
   #+END_SRC
** Text formatting
*** Auto Fill Mode
   #+BEGIN_SRC emacs-lisp
(setq-default fill-column 80)
(add-hook 'text-mode-hook 'turn-on-auto-fill)
   #+END_SRC
** =nov.el=
   #+BEGIN_SRC emacs-lisp
   (add-to-list 'auto-mode-alist '("\\.epub\\'" . nov-mode))

   (defun my-nov-font-setup ()
     (face-remap-add-relative 'variable-pitch :family "Liberation Serif"
                                              :height 1.4))
   (add-hook 'nov-mode-hook 'my-nov-font-setup)

   (setq nov-text-width 80)
   (setq nov-text-width t)
   (setq visual-fill-column-center-text t)
   (add-hook 'nov-mode-hook 'visual-line-mode)
   (add-hook 'nov-mode-hook 'visual-fill-column-mode)
   #+END_SRC
*** Refile
    - Allow all heading levels to be =org-refile= targets
    #+BEGIN_SRC emacs-lisp
    (setq org-refile-targets '((org-agenda-files :maxlevel . 3)))
    #+END_SRC

** =atomic-chrome=
   #+BEGIN_SRC emacs-lisp
   (require 'atomic-chrome)
   (atomic-chrome-start-server)
   #+END_SRC

** =auth-sources=
   File to source tokens and secrets, mostly for =magit-forge=
   #+BEGIN_SRC emacs-lisp
(setq auth-sources '("~/.authinfo"))
   #+END_SRC

** =org-roam=
   #+BEGIN_SRC emacs-lisp
(setq org-roam-directory "~/Dropbox/org-roam")

;; Both hooks are needed because backlinks refused to work without
;; the org-mode-hook enabled too.
;; See https://github.com/org-roam/org-roam/issues/116#issuecomment-622397605
(add-hook 'after-init-hook 'org-roam-mode)
(add-hook 'org-mode-hook #'org-roam-mode)
   #+END_SRC
