#+TITLE: Emacs Configuration

Welcome to my Emacs configuration, expressed in Org style! This assumes a
[[https://github.com/hlissner/doom-emacs][doom-emacs]] base installation.

* User
Tell Emacs who the current user is. This is primarily used to add an author
attribution to exported Org files (I think).
#+begin_src emacs-lisp
(setq user-full-name "James Liu"
      user-mail-address "james@jamesliu.io")
#+end_src
* UI
** Fonts
#+begin_src emacs-lisp
(setq-default line-spacing 3)
(setq doom-font (font-spec :family "Hack Nerd Font" :size 15))
(setq doom-themes-treemacs-enable-variable-pitch nil) ;; use doom-font for treemacs
#+end_src
** Themes
#+begin_src emacs-lisp
(setq doom-theme 'modus-vivendi)
(setq doom-themes-treemacs-theme "doom-atom")
#+end_src
** Editing
*** Line numbers
Display line numbers as absolute values from the beginning of the file. Relative
line numbers /may/ work better in conjunction with evil bindings, but I cbf
getting used to them.
#+begin_src emacs-lisp
(setq display-line-numbers-type t)
#+end_src
*** Word wrap
Soft wrapping comes in handy for smaller displays, and because most people don't
hard-wrap their lines.
#+begin_src emacs-lisp
(setq-default word-wrap t)
(global-visual-line-mode t) ;; navigate lines visually, not logically
#+end_src
*** Hard wrap
#+begin_src emacs-lisp
(setq-default fill-column 80)
(add-hook 'text-mode-hook 'turn-on-auto-fill)
#+end_src
* Programming
** Projectile
#+begin_src emacs-lisp
(setq projectile-project-search-path '("~/projects/"))
#+end_src
** Source Control
*** Magit
#+begin_src emacs-lisp
;; Auth keys.
(setq auth-sources '("~/.authinfo"))

(with-eval-after-load 'magit
  (require 'forge)
  (require 'github-review)

  (setq github-review-fetch-top-level-and-review-comments t))
#+end_src
** Languages
*** Go
#+begin_src emacs-lisp
(setq gofmt-command "goimports")
(add-hook 'before-save-hook 'gofmt-before-save)
#+end_src
*** Lisp
#+begin_src emacs-lisp
;; parinfer-rust-mode doesn't automatically install correctly on Apple M1.
;; To address this issue, the library was compiled separately and copied
;; to ~/.emacs.d/parinfer-rust/libparinfer_rust.so (notice the extension
;; was renamed).
(setq parinfer-rust-library "~/.emacs.d/parinfer-rust/libparinfer_rust.so")
#+end_src
*** Rust
#+begin_src emacs-lisp
(setq lsp-rust-server 'rust-analyzer)
(setq rustic-lsp-server 'rust-analyzer)
#+end_src
* Org
#+begin_src emacs-lisp
(setq org-directory "~/Dropbox/zettel/")
(setq org-agenda-files (directory-files-recursively "~/Dropbox/zettel/" "\.org$"))
(setq org-default-notes-file "~/Dropbox/zettel/inbox.org")
#+end_src
** Source Blocks
#+begin_src emacs-lisp
;; Provides <s shortcut to insert source blocks.
(require 'org-tempo)

(setq org-src-tab-acts-natively t
      org-src-fontify-natively t
      org-src-tab-acts-natively t
      org-confirm-babel-evaluate nil
      org-edit-src-content-indentation 0)

;; Go-specific config
(require 'ob-go)

;; Clojure-specific config
(setq org-babel-clojure-backend 'cider)
(require 'cider)

;; Register other languages for Org Babel
(org-babel-do-load-languages
 'org-babel-load-languages
 '((ruby . t)
   (python . t)
   (rust . t)
   (js . t)
   (shell . t)
   (go .t)
   (clojure .t)
   (C .t)))
#+end_src
** Images
#+begin_src emacs-lisp
;; Drag-and-drop images to an Org buffer.
(require 'org-download)
(add-hook 'dired-mode-hook 'org-download-enable)

;; Display images inline.
(setq org-startup-with-inline-images t)
(setq org-image-actual-width (/ (display-pixel-width) 3))
#+end_src
** Projectile integration
#+begin_src emacs-lisp
(require 'org-projectile)
(setq org-projectile-projects-file
      "~/Dropbox/org/projects/inbox.org")
(push (org-projectile-project-todo-entry) org-capture-templates)
(setq org-agenda-files (append org-agenda-files (org-projectile-todo-files)))
#+end_src
** Zetteldeft
#+begin_src emacs-lisp
(setq deft-directory org-directory)
;; Enable keybinds.
(zetteldeft-set-classic-keybindings)
#+end_src
* Integrations
** Atomic Chrome
Edit text fields on websites using Emacs.
#+begin_src emacs-lisp
(require 'atomic-chrome)
(atomic-chrome-start-server)
#+end_src
